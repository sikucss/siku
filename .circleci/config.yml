# Common Config
# ===============================================

default_build: &default_build
  docker:
    - image: circleci/node:10.15.0
  working_directory: ~/toolkit

# Jobs
# ===============================================

version: 2
jobs:
  build:
    <<: *default_build
    steps:
      - checkout
      - attach_workspace:
          at: ~/toolkit
      - run:
          name: Install Dependencies
          command: |
            npm i
            npm run postinstall
            sudo npm i -g lerna
            sudo npm i -g danger
            lerna bootstrap
      - run:
          name: Lint changes
          command: npm run lint
      - run:
          name: Danger.js checks
          command: danger ci
      - run:
          name: Build and Minify CSS
          command: npm run minify
      - persist_to_workspace:
          root: .
          paths:
            - build

  deploy:
    <<: *default_build
    steps:
      - checkout
      - attach_workspace:
          at: ~/toolkit
      - run:
          name: Gzip Assets
          command: |
            mkdir dist
            gzip -6 build/toolkit-core.min.css
            mv build/toolkit-core.min.css.gz dist/toolkit-core.min.css
            gzip -6 build/toolkit.min.css
            mv build/toolkit.min.css.gz dist/toolkit.min.css
      - store_artifacts:
          path: dist
          prefix: dist
      - run:
          name: Install AWS CLI
          command: sudo apt-get -y -qq install awscli
      - run:
          name: Deploy Assets to S3
          command: |
            aws s3 cp --content-encoding 'gzip' dist/toolkit-core.min.css s3://${BUCKET}/toolkit-core/${CIRCLE_TAG}/
            aws s3 cp --content-encoding 'gzip' dist/toolkit.min.css s3://${BUCKET}/toolkit/${CIRCLE_TAG}/
      - persist_to_workspace:
          root: .
          paths:
            - dist

  latest:
    <<: *default_build
    steps:
      - checkout
      - attach_workspace:
          at: ~/toolkit
      - run:
          name: Install AWS CLI
          command: sudo apt-get -y -qq install awscli
      - run:
          name: Override `latest` Assets on S3.
          command: |
            aws s3 cp --content-encoding 'gzip' dist/toolkit-core.min.css s3://${BUCKET}/toolkit-core/latest/
            aws s3 cp --content-encoding 'gzip' dist/toolkit.min.css s3://${BUCKET}/toolkit/latest/

# Workflows
# ===============================================

# Define our main `build-and-deploy` workflow:
# 1. Runs `build` for all branches and all tags.
# 2. Runs `deploy` ONLY for tags that PREFIX with a valid Semver version number.
#    e.g. `v1.0.0` or `v1.0.0-alpha` or `v1.0.0-beta` etc.
# 3. Runs `latest` ONLY for tags that are a valid Semver version number.
#    In other words, any other extra metadata applied to the end of a tag will
#    prevent `latest` from running.
#    e.g. `v1.0.0`
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
              tags:
                only: /^v(?:(\d+)\.)?(?:(\d+)\.)?(\*|\d+).*/
              branches:
                ignore: /.*/
      - latest:
          requires:
            - deploy
          filters:
              tags:
                only: /^v(?:(\d+)\.)?(?:(\d+)\.)?(\*|\d+)$/
              branches:
                ignore: /.*/

# Notifications
# ===============================================

# Send Slack Notifications to private Toolkit Owners channel when a CircleCI
# Workflow is triggered by a tag.
experimental:
  notify:
    branches:
      ignore: /.*/
